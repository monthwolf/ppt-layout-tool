name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Convert SVG to ICO
        run: |
          magick convert -density 256 -background transparent "resources/app_icon.svg" -define icon:auto-resize=256,128,64,48,32,16 "resources/app_icon.ico"
        shell: bash

      - name: Build executable
        id: build_exe
        run: |
          $EXE_NAME = "PPT-Layout-Tool-${{ github.ref_name }}"
          pyinstaller --noconsole --onefile --windowed --name $EXE_NAME `
          --add-data "resources;resources" `
          --add-data "pictures;pictures" `
          --icon="resources/app_icon.ico" `
          src/main.py
          echo "EXE_NAME=$EXE_NAME" >> $env:GITHUB_OUTPUT
        env:
          APP_VERSION: ${{ github.ref_name }}
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ppt-tool-executable
          path: dist/

  release:
    runs-on: windows-latest
    needs: build
    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ppt-tool-executable
          path: dist/

      - name: Set executable name
        id: set_exe_name
        run: |
          $EXE_NAME = "PPT-Layout-Tool-${{ github.ref_name }}"
          echo "EXE_NAME=$EXE_NAME" >> $env:GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ steps.set_exe_name.outputs.EXE_NAME }}.exe
          asset_name: ${{ steps.set_exe_name.outputs.EXE_NAME }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable 